#---------------------------------#
#      general configuration      #
#---------------------------------#

#

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Operating system (build VM template)
os: Visual Studio 2015

# environment variables
environment:
  # The following environement variable definitions are only used within
  # the pre_build section:
  QT5_DIR: C:\Qt\5.6\msvc2015_64
  BOOST_ROOT: C:\Libraries\boost_1_59_0
  KIT_ROOT: C:\local_vs2015_64
  #
  matrix:
  - B_USE_QT5:  OFF  # Qt4 gets defaulted with a cmake trick/kludge
  - B_USE_QT5:  ON

# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: true # Immediately finish build once one of the jobs fails
  # allow_failures:

#cache:
  # Preserving files/folders accross builds currently limited to 
  # 500Mb which is not enough for all the dependencies...

# scripts that are called at very beginning, before repo cloning
init:
  - set APPVEYOR=TRUE
  # Leaving traces of the context:
  - cmake --version
  #  - msbuild /version
  #  - dir C:\Libraries

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build Configuration, i.e. Debug, Release, etc
configuration:
  - Release
  - Debug

# MSBuild verbosity level
#  verbosity: quiet|minimal|normal|detailed

before_build:
  # Get rid of pesky Xamarin build messages, refer to
  # http://help.appveyor.com/discussions/problems/4569-the-target-_convertpdbfiles-listed-in-a-beforetargets-attribute-at-c-does-not-exist-in-the-project-and-will-be-ignored
  - del "C:\Program Files (x86)\MSBuild\14.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"
  #
  - mkdir %KIT_ROOT%
  - cd %KIT_ROOT%
  #
  ##### Install VCITY dependencies:
  # Note: many libraries come pre-installed by Appveyor. Refer to
  #   https://www.appveyor.com/docs/installed-software/ for a list.
  #   VCity currently uses: 
  #    * QT5:   C:\Qt\5.6\msvc2015_64
  #    * Boost: C:\Libraries\boost_1_59_0
  ### Qt4
  - curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/MEPP/packages/clean/qt-4.8.7-x64-msvc2015.7z
  - 7z x qt-4.8.7-x64-msvc2015.7z > nul
  ### OSG
  - curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/MEPP/packages/redo/osg-3.4.0.7z
  - 7z x osg-3.4.0.7z > nul
  ### Assimp
  - curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/MEPP/packages/redo/assimp-3.2.rar
  - 7z x assimp-3.2.rar > nul
  #### gdal
  - curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/VCITY/packages/clean/gdal.rar
  - 7z x gdal.rar > nul
  ### Laslib
  - curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/VCITY/packages/clean/laslib.rar
  - 7z x laslib.rar > nul
  ### Libxml2
  - curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/VCITY/packages/clean/libxml2-2.9.3.rar
  - 7z x libxml2-2.9.3.rar > nul
  ### PCL and its sub-dependencies
  ### Boost: kludgy renaming of appveyor provided version
  - ren C:\Libraries\boost_1_59_0\lib64-msvc-14.0 lib
  ### eigen
  - curl --connect-timeout 60 --max-time 600 -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/MEPP/packages/clean/eigen-3.2.8.rar
  - 7z x eigen-3.2.8.rar > nul
  ### PCL, flann, qhull
  - curl --connect-timeout 60 --max-time 600 -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/MEPP/packages/clean/PCL-1.7.2.7z
  - 7z x PCL-1.7.2.7z > nul
  #
  ##### Eventually we can configure the building (with cmake):
  - cd %APPVEYOR_BUILD_FOLDER%
    # Notes concerning cmake configuration flags:
    #  - When using 2012 binary kit (currently deprecated), then the pertinent
    #    option concerning OSG-QT will be -DBUILD_EMBARKED_OSG-QT_32=ON (i.e.
    #    32 instead of 34).
    #  - Testing against QT4 is obtained as a side effect of setting
    #    BUILD_GUI_QT5 to OFF in the matrix. QT4 gets then used because
    #    BUILD_GUI_QT4 is ON by default...
  - cmake . -G"Visual Studio 14 2015 Win64" -DVCITY_KIT_ROOT=%KIT_ROOT% -DBUILD_GUI_QT5=%B_USE_QT5% -DBUILD_EMBARKED_OSG-QT_34=ON -DBUILD_ALL_PLUGINS=ON -DBUILD_PCL=ON

# to run your custom scripts instead of automatic MSBuild
build_script:
    # Note: avoid launching msbuild with the /m set. This would produces
    # random crashes Qt-MOC invocations...
  - msbuild 3DUSE.sln 
    # For the binaries (the tests that ctest will trigger) to find the
    # dynamic libraries they depend on, the PATH variable must be set
    # properly:
  - set PATH=%BOOST_ROOT%\lib;%KIT_ROOT%\Qt\qt-4.8.7-x64-msvc2015\bin;%QT5_DIR%\bin;%KIT_ROOT%\osg\OpenSceneGraph-3.4.0\bin;%KIT_ROOT%\osg\OpenSceneGraph-3.4.0\bin\osgPlugins-3.4.0;%KIT_ROOT%\PCL\pcl-1.7.2\bin;%PATH%;%KIT_ROOT%\PCL\flann-1.8.4\bin;%KIT_ROOT%\PCL\qhull-2015.2\bin;%KIT_ROOT%\libxml2-2.9.3\bin;%KIT_ROOT%\assimp-3.2\lib;%APPVEYOR_BUILD_FOLDER%\Release\bin;%APPVEYOR_BUILD_FOLDER%\Debug\bin
    # CLEANME
    # - dir %APPVEYOR_BUILD_FOLDER%\Release\bin fails with
    #  Volume in drive C is Windows
    #  Volume Serial Number is D4AB-4044
    #  Directory of C:\projects\vcity\Release
  - dir .
    # We can now proceed with the sweet test suite
  - ctest -V
  - dir Debug
  - dir Debug\bin
