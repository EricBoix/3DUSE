language: cpp
sudo: required # need by trusty
dist: trusty   # Ubuntu 14.04 Trusty Tahr

os:
  - linux
  - osx

env:
    - BTYPE="Debug"
    - BTYPE="Release"

matrix:
  fast_finish: true
  exclude:
    - os: osx
      compiler: gcc

##### 
addons:
  apt:
    packages:
      - libboost-date-time-dev
      - libboost-filesystem-dev
      - libassimp-dev
      - libopenscenegraph-dev
      - libgdal-dev
      - doxygen
      - libboost-dev
      - libboost-date-time-dev
      - graphviz

install:
  # FIXME: remove this now hopefully useless environment variable
  - export TRAVIS=YES
  - export WGET="wget --no-check-certificate"
  - cmake --version
  #
  ### OSX dependencies install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update; fi
    # Dealing with boost on OSX is messy. The difficulty is for cmake to
    # find (when using find_package()) its boost required dependency: 
    #   - sometimes it will find it under the Boost name (capital B to Boost
    #     it works for other paltforms)
    #   - sometimes it will find it under the boost name (lower case b to boost)
    #     which is very OSX specific.
    # The additional difficulty is that this Boost vs boost confusiong depends
    # (still for OSX) on a combination of two parameters:
    #  - cmake version number,
    #  - boost packages version number.
    # In order to illustrate this difficulty, the follwing table illustrates
    # the "fluctations" encountered in the history of the platform
    #                  |  3.4.1  |  3.4.3  |  3.7.1  | CMake version
    #    ---------------------------------------------
    #      < 1.60      |  Boost  |  boost  |         |
    #        1.62      |         |         |  Boost  |
    #        1.63      |         |         |  boost  |
    #    ---------------------------------------------
    #    Boost version |
    # In other terms, with cmake version smaller to 3.4.1 you had to find
    # "Boost". Then when cmake came to version 3.4.1 you had to find the
    # lower case version "boost". When cmake upgraded to 3.7.1 one has to
    # fold back to a capital "Boost". But when boost package changed from
    # 1.62 to 1.63, one had to use the small caps "boost" again.
    # This succession of situations becomes hellish when you know that Travis
    # upgrades (that impact on OSX version that impacts on brew version)
    # are decoralated from Homebrew upgrade choices for the current
    # cmake version vs boost version...
    # 
    # This would be already chanlenging to maintain if another tranversal
    # difficulty (due to Travis) didn't kick in: sometimes when Travis
    # instals boost directly (through "brew install boost") then brew triggers
    # a re-install that ends up considered as an (false positive) error by
    # Travis. A work around (documented here 
    #  https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages )
    # consists in using the following odd form or install:
    #      brew outdated boost || brew upgrade boost; fi
    # All the above histoty is to say that, when installing boost for OSX on
    # Travis, you can expect some unstability and time (version dependent)
    # kludgy (ad-hoc) fixes. Here goes the historical notes:
    #   Prior to 2017 we upgraded boost (to obtain version 1.62) which
    #   made "Boost" available (OSX would behave as the other platforms again):
    #   - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    #      brew outdated boost || brew upgrade boost; fi
    #   As for January 2017, upgrading boost would switch to version 1.63
    #   which means switching from Boost to boost again (refer to the above
    # table). So we choose _not_ to upgrade and stick with version the 
    # default provided version 1.62...
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
       brew info boost; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ] and ["$QT"=="4"]]; then
       # As of december 2016, Homebrew no longer offers qt (qt4): refer to
       #    https://github.com/cartr/homebrew-qt4/issues/5 
       travis_wait 50 brew install cartr/qt4/qt; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ] and ["$QT"=="5"]]; then
       # FIXME: following comment seems to be a history glitch...
       # Note: open-scene-graph is not re-installed and hence the native OSG-Qt
       # (that links against Qt4) cannot be used.
       brew install qt5 &&
       brew link qt5 --force; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
       brew install assimp; fi
