#ifndef __CITYGML_ENVELOPE_HPP__
#define __CITYGML_ENVELOPE_HPP__
////////////////////////////////////////////////////////////////////////////////
#include "vecs.hpp"
#include <ostream>
////////////////////////////////////////////////////////////////////////////////
namespace citygml
{
////////////////////////////////////////////////////////////////////////////////
class Envelope
{
    friend class CityGMLHandler;
public:
    Envelope();
    Envelope(const TVec3d& lowerBound, const TVec3d& upperBound);

    const TVec3d& getLowerBound() const;
    const TVec3d& getUpperBound() const;

    void merge(const Envelope& e);

    void merge(const TVec3d& p);

protected:
    TVec3d _lowerBound;
    TVec3d _upperBound;
};
////////////////////////////////////////////////////////////////////////////////
std::ostream& operator<<( std::ostream&, const citygml::Envelope& );
////////////////////////////////////////////////////////////////////////////////
} // namespace citygml
////////////////////////////////////////////////////////////////////////////////
#endif // __CITYGML_ENVELOPE_HPP__
