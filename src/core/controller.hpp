#ifndef __CONTROLLER_HPP__
#define __CONTROLLER_HPP__
////////////////////////////////////////////////////////////////////////////////
#include <string>
#include <core/URI.hpp>
////////////////////////////////////////////////////////////////////////////////
namespace vcity
{
////////////////////////////////////////////////////////////////////////////////
class Application;
////////////////////////////////////////////////////////////////////////////////
class Controller
{
public:
    Controller(Application* app);

    // reset app
    virtual void reset();

    // generic nodes actions
    virtual void addNode(const URI& URI);
    virtual void deleteNode(const URI& URI);

    // layer
    virtual void addLayer(const std::string& name);
    virtual void deleteLayer(const vcity::URI& URI);
    virtual void setLayerName(const vcity::URI& URI, const std::string& name);

protected:
    Application* m_app;
};
////////////////////////////////////////////////////////////////////////////////
} // namespace vcity
////////////////////////////////////////////////////////////////////////////////
#endif // __CONTROLLER_HPP__
