////////////////////////////////////////////////////////////////////////////////
#include "scene.hpp"
////////////////////////////////////////////////////////////////////////////////
namespace vcity
{
////////////////////////////////////////////////////////////////////////////////
Scene::Scene()
    : m_tiles()
{
}
////////////////////////////////////////////////////////////////////////////////
Scene::~Scene()
{
    reset();
}
////////////////////////////////////////////////////////////////////////////////
void Scene::addLayer(Layer* layer)
{
    m_layers.push_back(layer);
}
////////////////////////////////////////////////////////////////////////////////
void Scene::deleteLayer(const URI& /*uri*/)
{

}
////////////////////////////////////////////////////////////////////////////////
std::vector<Layer*>& Scene::getLayers()
{
    return m_layers;
}
////////////////////////////////////////////////////////////////////////////////
void Scene::addTile(Tile* tile)
{
    m_tiles.push_back(tile);
}
////////////////////////////////////////////////////////////////////////////////
std::vector<Tile*>& Scene::getTiles()
{
    return m_tiles;
}
////////////////////////////////////////////////////////////////////////////////
void Scene::reset()
{
    std::vector<Tile*>::iterator it;
    for(it=m_tiles.begin(); it<m_tiles.end(); ++it)
    {
        delete *it;
    }
    m_tiles.clear();
}
////////////////////////////////////////////////////////////////////////////////
void Scene::dump()
{
    std::vector<Tile*>::iterator it;
    for(it=m_tiles.begin(); it<m_tiles.end(); ++it)
    {
        citygml::CityModel* model = (*it)->getCityModel();
        std::cout << model->getEnvelope() << std::endl;
    }
}
////////////////////////////////////////////////////////////////////////////////
citygml::CityObject* Scene::findNode(const std::string& name)
{
    citygml::CityObject* res = NULL;
    std::vector<Tile*>::iterator it;
    for(it=m_tiles.begin(); it<m_tiles.end(); ++it)
    {
        res = (*it)->findNode(name);
        if(res) break;
    }

    return res;
}
////////////////////////////////////////////////////////////////////////////////
} // namespace vcity
////////////////////////////////////////////////////////////////////////////////
