////////////////////////////////////////////////////////////////////////////////
#include "layerShp.hpp"
#include "application.hpp"
////////////////////////////////////////////////////////////////////////////////
namespace vcity
{
////////////////////////////////////////////////////////////////////////////////
LayerShp::LayerShp(const std::string& name)
    : abstractLayer(name), m_shp(nullptr)
{

}
////////////////////////////////////////////////////////////////////////////////
LayerShp::~LayerShp()
{
    OGRDataSource::DestroyDataSource(m_shp);
    //GDALClose(m_shp);
}
////////////////////////////////////////////////////////////////////////////////
const std::string LayerShp::getType() const
{
    return "LayerShp";
}
////////////////////////////////////////////////////////////////////////////////
URI LayerShp::getURI() const
{
    URI uri;
    uri.append(getName(), getType());
    uri.setType(getType());

    return uri;
}
////////////////////////////////////////////////////////////////////////////////
void LayerShp::dump()
{
	 log() << "    " << "TODO" << "\n";
}
////////////////////////////////////////////////////////////////////////////////
} // namespace vcity
////////////////////////////////////////////////////////////////////////////////
