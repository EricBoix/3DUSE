// -*-c++-*- VCity project, 3DUSE, Liris, 2013, 2014
////////////////////////////////////////////////////////////////////////////////
#ifndef __LAYERLAS_HPP__
#define __LAYERLAS_HPP__
////////////////////////////////////////////////////////////////////////////////
#include "abstractlayer.hpp"

#include "URI.hpp"
#include <string>
#include <memory>
////////////////////////////////////////////////////////////////////////////////
namespace vcity
{
////////////////////////////////////////////////////////////////////////////////
/// \brief LayerLas class : it holds LAS points cloud
class LayerLas : public abstractLayer
{
public:
    /// \brief Layer Build empty layer
    /// \param name Layer name
    LayerLas(const std::string& name);

    virtual ~LayerLas() override;

    /// Get layer type as string
	const std::string getType() const;

    /// Get Layer URI
	URI getURI() const;

    void dump();

private:
};
////////////////////////////////////////////////////////////////////////////////
typedef std::shared_ptr<LayerLas> LayerLasPtr;
////////////////////////////////////////////////////////////////////////////////
} // namespace vcity
////////////////////////////////////////////////////////////////////////////////
#endif // __LAYERLAS_HPP__
