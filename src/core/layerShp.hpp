#ifndef __LAYERSHP_HPP__
#define __LAYERSHP_HPP__
////////////////////////////////////////////////////////////////////////////////
#include "abstractlayer.hpp"
#include "URI.hpp"
#include <string>
#include <memory>
#include "ogrsf_frmts.h"
////////////////////////////////////////////////////////////////////////////////
namespace vcity
{
////////////////////////////////////////////////////////////////////////////////
/// \brief LayerShp class : it holds shp objects
class LayerShp : public abstractLayer
{
public:
    /// \brief Layer Build empty layer
    /// \param name Layer name
    LayerShp(const std::string& name);

    virtual ~LayerShp() override;

	const std::string getType() const;

	URI getURI() const;

    void dump();

public:
    OGRDataSource* m_shp;
};
////////////////////////////////////////////////////////////////////////////////
typedef std::shared_ptr<LayerShp> LayerShpPtr;
////////////////////////////////////////////////////////////////////////////////
} // namespace vcity
////////////////////////////////////////////////////////////////////////////////
#endif // __LAYERSHP_HPP__
