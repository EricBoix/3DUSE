// -*-c++-*- VCity project, 3DUSE, Liris, 2013, 2014
////////////////////////////////////////////////////////////////////////////////
#include "layerInfo.hpp"
#include "application.hpp"
////////////////////////////////////////////////////////////////////////////////
namespace vcity
{
////////////////////////////////////////////////////////////////////////////////
LayerInfo::LayerInfo(const std::string& name)
    : abstractLayer(name)
{

}
////////////////////////////////////////////////////////////////////////////////
LayerInfo::~LayerInfo()
{
    for(osgInfo* info : m_info)
    {
        delete info;
    }
}
////////////////////////////////////////////////////////////////////////////////
const std::string LayerInfo::getType() const
{
    return "LayerInfo";
}

////////////////////////////////////////////////////////////////////////////////
URI LayerInfo::getURI() const
{
    URI uri;
    uri.append(getName(), getType());
    uri.setType(getType());

    return uri;
}

////////////////////////////////////////////////////////////////////////////////
void LayerInfo::setInfo(std::vector<osgInfo*> info)
{
    m_info=info;
    std::cout<<"[layerInfo > setInfo].....infos added"<<std::endl;

}

////////////////////////////////////////////////////////////////////////////////
std::vector<osgInfo*> LayerInfo::getInfo()
{
    return m_info;
}

////////////////////////////////////////////////////////////////////////////////
void LayerInfo::dump()
{
	 log() << "    " << "TODO" << "\n";
}
////////////////////////////////////////////////////////////////////////////////
} // namespace vcity
////////////////////////////////////////////////////////////////////////////////

