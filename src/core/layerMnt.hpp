#ifndef __LayerMnt_HPP__
#define __LayerMnt_HPP__
////////////////////////////////////////////////////////////////////////////////
#include "abstractlayer.hpp"

#include "URI.hpp"
#include <string>
#include <memory>
////////////////////////////////////////////////////////////////////////////////
namespace vcity
{
////////////////////////////////////////////////////////////////////////////////
/// \brief LayerMnt class : it holds all the assimp objects
class LayerMnt : public abstractLayer
{
public:
    /// \brief Layer Build empty layer
    /// \param name Layer name
    LayerMnt(const std::string& name);

	const std::string getType() const;

	URI getURI() const;

    void dump();

private:
};
////////////////////////////////////////////////////////////////////////////////
typedef std::shared_ptr<LayerMnt> LayerMntPtr;
////////////////////////////////////////////////////////////////////////////////
} // namespace vcity
////////////////////////////////////////////////////////////////////////////////
#endif // __LayerMnt_HPP__
