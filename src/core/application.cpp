////////////////////////////////////////////////////////////////////////////////
#include "application.hpp"
////////////////////////////////////////////////////////////////////////////////
namespace vcity
{
////////////////////////////////////////////////////////////////////////////////
Application* gApp = nullptr;
Log* gLog = nullptr;
////////////////////////////////////////////////////////////////////////////////
Application::Application()
    : m_controller(nullptr)
{
    gApp = this;
    gLog = &m_log;
    m_dataprofile = createDefaultDataProfile();
}
////////////////////////////////////////////////////////////////////////////////
Application::~Application()
{
    delete m_controller;
}
////////////////////////////////////////////////////////////////////////////////
Scene& Application::getScene()
{
    return m_scene;
}
////////////////////////////////////////////////////////////////////////////////
const Scene& Application::getScene() const
{
    return m_scene;
}
////////////////////////////////////////////////////////////////////////////////
DataProfile& Application::getDataProfile()
{
    return m_dataprofile;
}
////////////////////////////////////////////////////////////////////////////////
const DataProfile& Application::getDataProfile() const
{
    return m_dataprofile;
}
////////////////////////////////////////////////////////////////////////////////
Controller* Application::getController()
{
    return m_controller;
}
////////////////////////////////////////////////////////////////////////////////
void Application::setController(Controller* cont)
{
    m_controller = cont;
}
////////////////////////////////////////////////////////////////////////////////
Algo& Application::getAlgo()
{
    return m_algo;
}
////////////////////////////////////////////////////////////////////////////////
const std::vector<URI>& Application::getSelectedNodes() const
{
    return m_selectedNodes;
}
////////////////////////////////////////////////////////////////////////////////
void Application::setSelectedNodes(const std::vector<URI>& uris)
{
    m_selectedNodes = uris;
}
////////////////////////////////////////////////////////////////////////////////
void Application::addSelectedNode(const URI& uri)
{
    m_selectedNodes.push_back(uri);
}
////////////////////////////////////////////////////////////////////////////////
void Application::resetSelectedNodes()
{
    m_selectedNodes.clear();
}
////////////////////////////////////////////////////////////////////////////////
Application& app()
{
    return *gApp;
}
////////////////////////////////////////////////////////////////////////////////
Log& log()
{
    return *gLog;
}
////////////////////////////////////////////////////////////////////////////////
} // namespace vcity
////////////////////////////////////////////////////////////////////////////////
